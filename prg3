from sklearn.datasets import load_wine
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, f1_score
import matplotlib.pyplot as plt

# Load dataset
data = load_wine()
X = data.data
y = data.target

# Split the dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=1)

# Try different numbers of trees
tree_counts = [1, 5, 10, 20, 50, 100, 200]
accuracies = []
f1_scores = []

for n in tree_counts:
    model = RandomForestClassifier(n_estimators=n, random_state=1)
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)
    acc = accuracy_score(y_test, y_pred)
    f1 = f1_score(y_test, y_pred, average='macro')
    accuracies.append(acc)
    f1_scores.append(f1)
    print(f"Trees: {n:<3} | Accuracy: {acc:.4f} | F1 Score: {f1:.4f}")

# Plot Accuracy
plt.figure(figsize=(10, 5))
plt.plot(tree_counts, accuracies, label='Accuracy', marker='o')
plt.xlabel('Number of Trees')
plt.ylabel('Score')
plt.title('Random Forest Accuracy vs Number of Trees')
plt.legend()
plt.grid(True)

# Plot F1 Score
plt.figure(figsize=(10, 5))
plt.plot(tree_counts, f1_scores, label='F1 Score', marker='s', color='orange')
plt.xlabel('Number of Trees')
plt.ylabel('Score')
plt.title('Random Forest F1 Score vs Number of Trees')
plt.legend()
plt.grid(True)

plt.show()
